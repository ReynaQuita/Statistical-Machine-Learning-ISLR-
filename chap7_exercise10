library(ISLR)
library(leaps)
library(gam)
library(splines)
library(xtable)

attach(College)
View(College)

######################10a##########################

train.size = trunc(0.7*dim(College)[1]); train.size
train = sample(1:dim(College)[1], train.size)
test = -train


College_train = College[train,]
dim(College_train)
College_test = College[test,]
dim(College_test)

set.seed(1)
fwd_stepwise = regsubsets(Outstate ~ . ,data = College, subset= train, 
                          nvmax = 17, method = "forward")
sum_fwd = summary(fwd_stepwise)

#adjr2

sum_fwd$adjr2
max(sum_fwd$adjr2)
which.max(sum_fwd$adjr2)

plot(sum_fwd$adjr2, xlab = "Number of Variables", ylab = "adjr2", type = "l")
points(which.max(sum_fwd$adjr2), max(sum_fwd$adjr2),
       col="red", cex=2, pch=20)

plot(fwd_stepwise, scale = "adjr2")

coefficients(fwd_stepwise, id = which.max(sum_fwd$adjr2))

#cp

sum_fwd$cp
min(sum_fwd$cp)
which.min(sum_fwd$cp)

plot(sum_fwd$cp, xlab = "Number of Variables", ylab = "cp", type = "l")
points(which.min(sum_fwd$cp), min(sum_fwd$cp),
       col="red", cex=2, pch=20)

plot(fwd_stepwise, scale = "Cp")

coefficients(fwd_stepwise, id = which.min(sum_fwd$cp))

#bic

sum_fwd$bic
min(sum_fwd$bic)
which.min(sum_fwd$bic)

plot(sum_fwd$bic, xlab = "Number of Variables", ylab = "bic", type = "l")
points(which.min(sum_fwd$bic), min(sum_fwd$bic),
       col="red", cex=2, pch=20)

plot(fwd_stepwise, scale = "bic")

coefficients(fwd_stepwise, id = which.min(sum_fwd$bic))

#cross-validation

predict.regsubsets = function(object, newdata, id, ...){
  form = as.formula(object$call[[2]])
  mat = model.matrix(form,newdata)
  coefi = coef(object, id=id)
  xvars = names(coefi)
  mat[,xvars]%*%coefi
}

k = 10
set.seed(1)
folds = sample(1:k, nrow(College_train), replace = TRUE)
cv.errors = matrix(NA,k,17, dimnames = list(NULL, paste(1:17)))

for (j in 1:k) {
  fwd.fit = regsubsets(Outstate ~ . ,data = College_train[folds!=j,], 
                       nvmax = 17, method = "forward")
  for (i in 1:17) {
    pred = predict(fwd.fit, College_train[folds==j,], id=i)
    cv.errors[j,i] = mean((College_train$Outstate[folds == j] - pred)^2)
  }
}
cv.errors
mean.cv.errors = apply(cv.errors, 2, mean)
mean.cv.errors
which.min(mean.cv.errors)
plot(mean.cv.errors)

fwd.fit.all = regsubsets(Outstate ~ . ,data = College_train, 
                         nvmax = 17, method = "forward")
coef(fwd.fit.all, 13)

######################10b##########################

gam1 = gam(Outstate ~ Private + Accept + Enroll + Room.Board + Personal +
             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
gam2 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + Enroll + Room.Board + Personal +
             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
gam3 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + lo(Enroll,span=0.2) + Room.Board + Personal +
             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
gam4 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + lo(Enroll,span=0.2) + bs(Room.Board,df=7) + Personal +
             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
gam5 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + lo(Enroll,span=0.2) + bs(Room.Board,df=7) + s(Personal,4) +
             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
gam6 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + lo(Enroll,span=0.2) + bs(Room.Board,df=7) + s(Personal,4) +
             Terminal + perc.alumni + s(Expend,4) + Grad.Rate, data=College_train)

anova(gam1,gam2,gam3,gam4,gam5,gam6)
#anova(gam1,gam2,gam3)

dim(ns(Accept,df=4))
attr(ns(Accept,df=4),"knots")

#gam7 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + Enroll + Room.Board + Personal +
#             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#gam8 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + bs(Enroll,df=7) + Room.Board + Personal +
#             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#gam9 = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + bs(Enroll,df=7) + Room.Board + bs(Personal,df=7) +
#             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#modelb = gam(Outstate ~ Private + ns(Accept, knots = c(604,1110,2424 )) + bs(Enroll,df=7) + Room.Board + bs(Personal,df=7) +
#             Terminal + perc.alumni + s(Expend,4) + Grad.Rate, data=College_train)

#anova(gam1,gam7,gam8,gam9,modelb)


#gam11 = gam(Outstate ~ Private + lo(Accept, span = 0.2) + Enroll + Room.Board + Personal +
#             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#gam12 = gam(Outstate ~ Private + lo(Accept, span = 0.2) + lo(Enroll,span=0.2) + Room.Board + Personal +
#             Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#gam13 = gam(Outstate ~ Private + lo(Accept, span = 0.2) + lo(Enroll,span=0.2) + lo(Room.Board,span = 0.2) + Personal +
#              Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#gam14 = gam(Outstate ~ Private + lo(Accept, span = 0.2) + lo(Enroll,span=0.2) + lo(Room.Board,span = 0.2) + ns(Personal,4) +
#              Terminal + perc.alumni + Expend + Grad.Rate, data=College_train)
#modelc = gam(Outstate ~ Private + lo(Accept, span = 0.2) + lo(Enroll,span=0.2) + lo(Room.Board,span = 0.2) + ns(Personal,4) +
#               Terminal + perc.alumni + bs(Expend,df=7) + Grad.Rate, data=College_train)

#anova(gam1,gam11,gam12,gam13,gam14,modelc)

par(mfrow = c(3,3))
#x11(); 
#x11(); 
plot.Gam(gam6,se = TRUE, col = "green")
#plot(gam6, se = TRUE, col = "blue")
#plot(modelb, se = TRUE, col = "blue")
#plot(modelc, se = TRUE, col = "blue")
#par(mfrow = c(1, 3))
#plot(gam6[1:3], se = T, col = "blue")

#################10e########################

preds1 = predict(gam6, newdata = College_test)
gam.err1 = mean((College_test$Outstate - preds1)^2)
gam.err1
gam.tss = sum((College_test$Outstate - mean(College_test$Outstate))^2)
gam.rss = sum((College_test$Outstate - preds1)^2)
test.r2.m1 = 1 - gam.rss/gam.tss
test.r2.m1

#preds2 = predict(modelb, newdata = College_test)
#gam.err2 = mean((College_test$Outstate - preds2)^2)
#gam.err2
#gam.tss = sum((College_test$Outstate - mean(College_test$Outstate))^2)
#gam.rss = sum((College_test$Outstate - preds2)^2)
#test.r2.m2 = 1 - gam.rss/gam.tss
#test.r2.m2

#preds3 = predict(modelc, newdata = College_test)
#gam.err3 = mean((College_test$Outstate - preds3)^2)
#gam.err3
#gam.tss = sum((College_test$Outstate - mean(College_test$Outstate))^2)
#gam.rss = sum((College_test$Outstate - preds3)^2)
#test.r2.m3 = 1 - gam.rss/gam.tss
#test.r2.m3

#table_MSE_R2 = data.frame("Model a"= c(gam.err1, test.r2.m1),
#                           "Model b" = c(gam.err2, test.r2.m2),
#                           "Model c" = c(gam.err3, test.r2.m3))
#row.names(table_MSE_R2) = c("MSE","R^2")
#table_MSE_R2
#print(xtable(table_MSE_R2), type = "latex")

#################10d########################
summary(gam6)
